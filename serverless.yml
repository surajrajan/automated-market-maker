# Primary serverless.yml file for AutomatedMarketMaker.
#
# More documentation:
#    docs.serverless.com

service: AutomatedMarketMaker

provider:
  name: aws
  runtime: java11
  lambdaHashingVersion: 20201221
  stage: dev
  region: us-east-1

  iamRoleStatements:
    # DynamoDB Access
    - Effect: "Allow"
      Action:
        - "dynamodb:*"
      Resource: "*"
    # SQS Access
    - Effect: "Allow"
      Action:
        - "sqs:*"
      Resource: "*"
    # KMS Access
    - Effect: "Allow"
      Action:
        - "kms:*"
      Resource: "*"

# you can define service wide environment variables here
#  environment:
#    variable1: value1

# you can add packaging information here
package:
  artifact: build/distributions/automated-market-maker.zip

functions:
  # Creates a liquidity pool
  createLiquidityPool:
    handler: com.api.handler.pool.CreateLiquidityPoolHandler
    events:
      - http:
          path: /pool/{liquidityPoolName}
          method: post
  # Gets a liquidity pool
  getLiquidityPool:
    handler: com.api.handler.pool.GetLiquidityPoolHandler
    events:
      - http:
          path: /pool/{liquidityPoolName}
          method: get

  # Estimates a swap
  estimateSwap:
    handler: com.api.handler.swap.EstimateSwapHandler
    events:
      - http:
          path: /pool/swap/estimate
          method: post

  # Submits a swap
  submitSwap:
    handler: com.api.handler.swap.SubmitSwapHandler
    events:
      - http:
          path: /pool/swap/submit
          method: post

  # Submits a swap
  swapRequestListener:
    handler: com.api.handler.listener.SwapRequestListenerHandler
    events:
      - sqs:
          arn:
            Fn::Join:
              - ':'
              - - arn
                - aws
                - sqs
                - Ref: AWS::Region
                - Ref: AWS::AccountId
                - AutomatedMarketMaker-dev-SwapRequests



#    Define function environment variables here
#    environment:
#      variable2: value2

resources:
  Resources:

    # DynamoDB Table for LiquidityPools
    LiquidityPoolsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: AutomatedMarketMaker-dev-LiquidityPools
        AttributeDefinitions:
          - AttributeName: liquidityPoolName
            AttributeType: S
        KeySchema:
          - AttributeName: liquidityPoolName
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

    # DynamoDB Table for Transactions
    TransactionsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: AutomatedMarketMaker-dev-Transactions
        AttributeDefinitions:
          - AttributeName: transactionId
            AttributeType: S
        KeySchema:
          - AttributeName: transactionId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

    # SQS Queue for SwapRequests
    SwapRequestsQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: AutomatedMarketMaker-dev-SwapRequests
